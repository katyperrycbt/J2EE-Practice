/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.64
 * Generated at: 2021-04-01 08:04:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class courseRegistration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1617259734585L));
    _jspx_dependants.put("jar:file:/C:/Users/PC/eclipse-workspace2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Web-Lab4/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425953470000L));
    _jspx_dependants.put("jar:file:/C:/Users/PC/eclipse-workspace2/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Web-Lab4/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425953470000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Course Registration</title>\r\n");
      out.write("<style>\r\n");
      out.write("table, th, td {\r\n");
      out.write("  border: 1px solid black;\r\n");
      out.write("  padding: 5px;\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t  \r\n");
      out.write("\t \r\n");
      out.write("\t<h1>Personal Information</h1>\r\n");
      out.write("\t<h3>Full name: Trần Trọng Thức</h3>\r\n");
      out.write("\t<h3>ID: ITITIU18125</h3>\r\n");
      out.write("\t<h3>DoB: September 1st, 2000</h3>\r\n");
      out.write("\t<hr/>\r\n");
      out.write("\t<h5>All courses:</h5>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction checkThis(thisBox){\r\n");
      out.write("\t\t\tlet currentValue = document.getElementById(\"checkedArray\");\r\n");
      out.write("\t\t\tif (thisBox.checked) {\r\n");
      out.write("\t\t\tcurrentValue.value = currentValue.value + \",\" + thisBox.value;\r\n");
      out.write("\t\t\t//currentValue.value += 'HG';\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\tcurrentValue.value = currentValue.value.replace(\",\" + thisBox.value, \"\");\r\n");
      out.write("\t\t\t\t//currentValue.value += 'HGG';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tconsole.log(currentValue.value);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<form method=\"POST\" action=\"courseController\">\r\n");
      out.write("\t<table style=\"width: 50%\">\r\n");
      out.write("\t<caption>Courses</caption>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th> Select </th>\r\n");
      out.write("\t\t<th> Course Name </th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

	String[] courses = {"Intro to C/C++", 
               "Object-oriented Programming", 
               "Object-oriented Analysis & Designs", 
               "Data Structures & Algorithms",
               "Principles of Database Managment",
               "Software Engineering",
               "Theoritical Model Computing",
               "Web Designs & Its Appications",
               "Information System",
               "Intro to A.I.",
               "Principles of Programming Language"};
	
	for (int i = 0; i < courses.length; i++) {
		out.print("<tr>"
		+ "<td><input type=\"checkbox\" id=\""+courses[i]+"\" value=\""+courses[i]+"\" name=\"selectedCourses\" onclick=\"checkThis(this)\"></td>"
		+ "<td><label for=\""+courses[i]+"\">"+courses[i] + "</label></td></tr>"
		);
	}
	
      out.write("\t\r\n");
      out.write("\t<tr><td></td><td><input type=\"submit\" id=\"sm\"></td></tr>\r\n");
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<input type=\"hidden\" id=\"checkedArray\" value=\"Hi\" name=\"checkedArray\">\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
