/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.64
 * Generated at: 2021-05-13 07:57:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Log in</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

	String username = request.getParameter("username");
	String password = request.getParameter("password");
	if (username != null && !username.isEmpty() && password != null && !password.isEmpty()) {
		String studentID = "";
		String studentName = "";

		String connectionURL = "jdbc:mysql://localhost:3307/nodejs"; //step 2
		Connection connection = null; //step 3
		Statement statement = null; //step 4
		ResultSet rs = null;

		try {
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			connection = DriverManager.getConnection(connectionURL, "root", "admin");
			statement = connection.createStatement();
			rs = statement.executeQuery("SELECT * FROM student WHERE StudentID = " + username + " LIMIT 1"); //step 5
			while (rs.next()) {
				out.println(rs.getString("StudentID"));
				out.println(rs.getString("StudentName") + "<br>");
				studentID = rs.getString("StudentID");
				studentName = rs.getString("StudentName");
			} //step 6
		} catch (SQLException e) {
			out.println("SQLException caught: " + e.getMessage());
		} finally {
			if (studentID != null && !studentID.isEmpty() && studentName != null && !studentName.isEmpty()
			&& username.equals(password)) {
				out.println("<h3>Logged in successfully!</h3>");
				Cookie newCookie = new Cookie("logininfo", username);
				newCookie.setMaxAge(60 * 60 * 24);
				newCookie.setPath("/");
				response.addCookie(newCookie);
				response.sendRedirect("Login.jsp");
			} else {
				out.println("<h4>Incorrect username or password</h4>");
			}
			rs.close(); //step 7

		}
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<h1>Log in to view or register for courses</h1>\r\n");
      out.write("\t<hr />\r\n");
      out.write("\r\n");
      out.write("\t");

	Cookie[] cookies = request.getCookies();
	//boolean isMyCookieExist = false;

	if (cookies != null) {
		for (int i = 0; i < cookies.length; i++) {
			Cookie temp = cookies[i];
			if (temp.getName().equals("logininfo")) {
				out.println("<h3>You have already logged in! Log out by clearing out the cookie.</h3>");
				out.println(""+
						"<hr/>"+
						"<a href=\"Homepage.jsp\">Go to registered courses</a>");
				break;
			}
			if (i == cookies.length - 1) {
				out.println("<form method=\"POST\" action=\"Login.jsp\">"+
						"	<table>"+
						"		<tr>"+
						"			<th><label for=\"username\">Username</label></th>"+
						"		<td><input required type=\"text\" name=\"username\" id=\"username\" /></td>" +
						"		</tr>"+
						"		<tr>"+
						"			<th><label for=\"password\">Password</label></th>"+
						"			<td><input required type=\"password\" name=\"password\" id=\"password\" /></td>"+
						"		</tr>"+
						"		<tr>"+
						"			<th><label for=\"submit\">Log in</label></th>"+
						"			<td><input type=\"submit\" value=\"Log in\" id=\"submit\" /></td>"+
						"		</tr>"+
						"	</table>"+
						"</form>");
			}
		}
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
